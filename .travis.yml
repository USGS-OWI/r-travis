# .travis.yml for r-travis.
#
# If you're looking to use r-travis with your project, DO NOT USE THIS
# FILE -- use `sample.travis.yml` instead.

language: c
# language: objective-c

env:
  global:
    - R_BUILD_ARGS=" "
    - R_CHECK_ARGS="--as-cran"
  matrix:
    - BOOTSTRAP_LATEX="1"
script: ./travis-tool.sh run_tests
notifications:
  email:
    on_success: change
    on_failure: change
before_install:
  - echo "$0" "$*"
  - cp scripts/travis-tool.sh fakepackage
  - cd fakepackage
  - ./travis-tool.sh bootstrap
before_script:
  - ./travis-tool.sh dump_sysinfo
after_success:
  - ./travis-tool.sh dump_logs_by_extension out
after_failure:
  - ./travis-tool.sh dump_logs
install:
  - ./travis-tool.sh install_deps
  # TESTS
  #
  # The following lines exist to test various features of our travis
  # scripts; don't use these as a model for other `.travis.yml` files.
  # Test aptget_install with multiple arguments.
  - test -z "$(which tmux)"
  - test -z "$(which sponge)"
  - ./travis-tool.sh aptget_install tmux moreutils
  - test -n "$(which tmux)"
  - test -n "$(which sponge)"
  # Test r_install (which accepts multiple arguments).
  - ./travis-tool.sh r_install stringr lubridate
  - Rscript -e 'library(stringr); library(lubridate)'
  # Test github package installation.
  - Rscript -e 'stopifnot(!any(c("assertthat", "testthat") %in% installed.packages())'
  - ./travis-tool.sh github_package assertthat
  - ./travis-tool.sh github_package testthat
  - Rscript -e 'library(assertthat); library(testthat)'
  # Test R binary installation.
  - ./travis-tool.sh r_binary_install RUnit survey
  - Rscript -e 'library(RUnit); library(survey)'
  - ./travis-tool.sh dump_sysinfo | grep -q 'R version '
